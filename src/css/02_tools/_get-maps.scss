// Managing Z-Layers
@function z($layer: "base") {
  @if not map-has-key($z-layers, $layer) {
    @warn "No z-index found in $z-layers map for '#{$layer}'. Property omitted.";
  }
  @return map-get($z-layers, $layer);
}

@function s($space: "xxxs") {
  @if not map-has-key($spaces, $space) {
    @warn "No breakpoint value found in $spaces map for '#{$space}'. Property omitted.";
  }
  @return map-get($spaces, $space);
}

// Managing easing values
@function ease($ease: "snappy") {
  @if not map-has-key($easing, $ease) {
    @warn "No easing value found in $easing map for '#{$ease}'. Property omitted.";
  }
  @return map-get($easing, $ease);
}

// Managing container max-width
@function maxw($width: "main") {
  @if not map-has-key($container-max-widths, $width) {
    @warn "No container max-width value found in $container-max-widths map for '#{$width}'. Property omitted.";
  }
  @return map-get($container-max-widths, $width);
}

// Managing container max-width
@function bk($bk: "mobile") {
  @if not map-has-key($breakpoints, $bk) {
    @warn "No breakpoint value found in $breakpoints map for '#{$bk}'. Property omitted.";
  }
  @return map-get($breakpoints, $bk);
}

